name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy repository to the server
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SERVER_PORT }}
          source: "."
          target: "/root/tgcard"

      - name: Deploy using Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SERVER_PORT }}
          script: |
            cd /root/tgcard
            echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env
            echo "WEB_URL=${{ secrets.WEB_URL }}" >> .env
            docker compose down
            docker compose up --build -d

      - name: Healthcheck - Verify WEB_URL is accessible
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SERVER_PORT }}
          script: |
            retries=5
            until curl -sf -o /dev/null "${{ secrets.WEB_URL }}"; do
              retries=$((retries - 1))
              if [ $retries -eq 0 ]; then
                echo "Healthcheck failed: WEB_URL is not accessible after 5 attempts"
                exit 1
              fi
              echo "Healthcheck attempt failed. Retrying in 10 seconds..."
              sleep 10
            done
            echo "Healthcheck passed: WEB_URL is accessible!"